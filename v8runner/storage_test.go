package v8runner

import (
	//"testing"
	"github.com/stretchr/testify/suite"
	"path"
	"./dumpMode"

)

type тестыНаРаботуСХранилищем struct {
	suite.Suite
	conf                            *Конфигуратор
	КаталогЗагрузки                 string
	ПутьКФайлуКофигурации           string
	ПутьКФайлуСпискаОбъектов        string
	ФорматВыгрузки                  string
	ОбновитьФайлИнформацииОВыгрузке bool
}

type тестыНаРаботуСХранилищемЧерезКонфигуратор struct {
	suite.Suite
	conf                            *Конфигуратор
	КаталогЗагрузки                 string
	ПутьКФайлуКофигурации           string
	ПутьКФайлуСпискаОбъектов        string
	ФорматВыгрузки                  string
	ОбновитьФайлИнформацииОВыгрузке bool


}

func (s *тестыНаРаботуСХранилищем) SetupSuite() {

	s.ПутьКФайлуКофигурации = path.Join(pwd, "fixtures/ТестовыйФайлКонфигурации.cf")

}

func (s *тестыНаРаботуСХранилищемЧерезКонфигуратор) SetupSuite() {

	s.ПутьКФайлуКофигурации = path.Join(pwd, "fixtures/ТестовыйФайлКонфигурации.cf")
	s.КаталогЗагрузки = ВременныйКаталог()
	s.ФорматВыгрузки = РежимВыгрузкиКонфигурации.Иерархический

	conf := НовыйКонфигуратор()
	errLoad := conf.ЗагрузитьКонфигурациюИзФайла(s.ПутьКФайлуКофигурации)
	s.NoErrorf(errLoad, "Не удалось выполнить загрузку конфигурации: %s", s.ПутьКФайлуКофигурации)

	err := conf.ВыгрузитьКонфигурациюСРежимомВыгрузки(s.КаталогЗагрузки, s.ФорматВыгрузки)
	s.NoErrorf(err, "Не удалось выполностьб выгрузку конфигурации в каталог: %s", s.КаталогЗагрузки)

	xmlFile := path.Join(s.КаталогЗагрузки, configuratuonXml)
	_, err = Exists(xmlFile)

	s.NoErrorf(err, "Файл с выгруженной конфигурацией не найден: %s", xmlFile )

}

func (s *тестыНаРаботуСХранилищемЧерезКонфигуратор) SetupTest() {

	s.conf = НовыйКонфигуратор()
	s.ОбновитьФайлИнформацииОВыгрузке = false

}

func (s *тестыНаРаботуСХранилищем) SetupTest() {

	s.conf = НовыйКонфигуратор()

}

func (s *тестыНаРаботуСХранилищемЧерезКонфигуратор) TearDownSuite() {
	ОчиститьВременныйКаталог()
}


func (s *тестыНаРаботуСХранилищем) TearDownSuite() {
	ОчиститьВременныйКаталог()
}
