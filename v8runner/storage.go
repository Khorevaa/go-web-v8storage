package v8runner

import "./v8storage"

// ConfigurationRepositoryCreate
func (conf *Конфигуратор) СоздатьХранилищеКонфигурации(ПутьКХранилищю string, Пользователь string, Пароль string, ДополнительныеПараметры ...string) (storage *ХранилищеКонфигурации, err error) {

	ХранилищеКонфигурации := v8storage.НовоеХранилищеКонфигурации(conf, ПутьКХранилищю, Пользователь, Пароль)

	err = ХранилищеКонфигурации.СоздатьХранилищеКонфигурации(ДополнительныеПараметры...)

	return
}

// ConfigurationRepositoryBindCfg
func (conf *Конфигуратор) ПодключитьсяКХранилищюКонфигурации(ПутьКХранилищю string, Пользователь string, Пароль string, ИгнорироватьНаличиеПодключеннойБД bool, ЗаменитьКонфигурациюБД bool) (storage *ХранилищеКонфигурации, err error) {

	ХранилищеКонфигурации := v8storage.НовоеХранилищеКонфигурации(conf, ПутьКХранилищю, Пользователь, Пароль)

	err = ХранилищеКонфигурации.ПодключитьсяКХранилищюКонфигурации(ИгнорироватьНаличиеПодключеннойБД, ЗаменитьКонфигурациюБД)

	return
}
